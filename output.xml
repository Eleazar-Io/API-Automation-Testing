<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.10.2 on win32)" generated="20220411 14:47:53.741" rpa="false" schemaversion="2">
<suite id="s1" name="Api-Test" source="D:\Code\QA\robotframework\robot-test\api-test">
<suite id="s1-s1" name="[1]POST User" source="D:\Code\QA\robotframework\robot-test\api-test\[1]POST_User.robot">
<test id="s1-s1-t1" name="Create User">
<kw name="Create User Info">
<var>${userInfo}</var>
<kw name="Generate Random String" library="String">
<var>${name}</var>
<arg>8</arg>
<arg>[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220411 14:47:54.110" level="INFO">${name} = YDHyBOPR</msg>
<status status="PASS" starttime="20220411 14:47:54.110" endtime="20220411 14:47:54.110"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${email}</var>
<arg>8</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220411 14:47:54.110" level="INFO">${email} = F32Z3mmC</msg>
<status status="PASS" starttime="20220411 14:47:54.110" endtime="20220411 14:47:54.110"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${gender}</var>
<arg>male</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220411 14:47:54.111" level="INFO">${gender} = male</msg>
<status status="PASS" starttime="20220411 14:47:54.111" endtime="20220411 14:47:54.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>active</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220411 14:47:54.112" level="INFO">${status} = active</msg>
<status status="PASS" starttime="20220411 14:47:54.111" endtime="20220411 14:47:54.112"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{user_info}</var>
<arg>name=${name}</arg>
<arg>email=${email}@mail.com</arg>
<arg>gender=${gender}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220411 14:47:54.113" level="INFO">&amp;{user_info} = { name=YDHyBOPR | email=F32Z3mmC@mail.com | gender=male | status=active }</msg>
<status status="PASS" starttime="20220411 14:47:54.112" endtime="20220411 14:47:54.114"/>
</kw>
<msg timestamp="20220411 14:47:54.114" level="INFO">${userInfo} = {'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}</msg>
<status status="PASS" starttime="20220411 14:47:54.109" endtime="20220411 14:47:54.114"/>
</kw>
<kw name="New POST Request">
<var>${body}</var>
<arg>${userInfo}</arg>
<kw name="New Session" library="Keywords">
<var>${mySession}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Authorization=Bearer ${access_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220411 14:47:54.116" level="INFO">${header} = {'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'}</msg>
<status status="PASS" starttime="20220411 14:47:54.115" endtime="20220411 14:47:54.116"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>mySession</arg>
<arg>${base_url}</arg>
<arg>headers=${header}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220411 14:47:54.116" level="INFO">Creating Session using : alias=mySession, url=https://gorest.co.in/public/v2/, headers={'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220411 14:47:54.116" endtime="20220411 14:47:54.116"/>
</kw>
<msg timestamp="20220411 14:47:54.118" level="INFO">${mySession} = mySession</msg>
<status status="PASS" starttime="20220411 14:47:54.115" endtime="20220411 14:47:54.118"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${res}</var>
<arg>${mySession}</arg>
<arg>users</arg>
<arg>data=${user_info}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220411 14:47:55.114" level="INFO">POST Request : url=https://gorest.co.in/public/v2/users 
 path_url=/public/v2/users 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8', 'Content-Length': '65', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=name=YDHyBOPR&amp;email=F32Z3mmC%40mail.com&amp;gender=male&amp;status=active 
 </msg>
<msg timestamp="20220411 14:47:55.115" level="INFO">POST Response : url=https://gorest.co.in/public/v2/users 
 status=201, reason=Created 
 headers={'Server': 'nginx', 'Date': 'Mon, 11 Apr 2022 07:47:53 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '0', 'X-Content-Type-Options': 'nosniff', 'X-Download-Options': 'noopen', 'X-Permitted-Cross-Domain-Policies': 'none', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'X-RateLimit-Limit': '90', 'X-RateLimit-Remaining': '89', 'X-RateLimit-Reset': '1', 'Location': 'https://gorest.co.in/public/v2/users/3687', 'ETag': 'W/"0ea68480c228e682f71bc9f3c2597d8e"', 'Cache-Control': 'max-age=0, private, must-revalidate', 'X-Request-Id': '16cd9888-f4c6-4a10-9e5e-aa1cc51f79b2', 'X-Runtime': '0.020300', 'Strict-Transport-Security': 'max-age=63072000; includeSubDomains', 'Vary': 'Origin'} 
 body={"id":3687,"name":"YDHyBOPR","email":"F32Z3mmC@mail.com","gender":"male","status":"active"} 
 </msg>
<msg timestamp="20220411 14:47:55.115" level="INFO">C:\Users\SIRCLO\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'gorest.co.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220411 14:47:55.119" level="INFO">${res} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220411 14:47:54.118" endtime="20220411 14:47:55.120"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${body}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220411 14:47:55.127" level="INFO">${body} = {'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}</msg>
<status status="PASS" starttime="20220411 14:47:55.121" endtime="20220411 14:47:55.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${res.ok}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220411 14:47:55.129" endtime="20220411 14:47:55.134"/>
</kw>
<msg timestamp="20220411 14:47:55.135" level="INFO">${body} = {'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}</msg>
<status status="PASS" starttime="20220411 14:47:54.114" endtime="20220411 14:47:55.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220411 14:47:55.137" level="INFO">{'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}</msg>
<status status="PASS" starttime="20220411 14:47:55.136" endtime="20220411 14:47:55.137"/>
</kw>
<status status="PASS" starttime="20220411 14:47:54.108" endtime="20220411 14:47:55.138"/>
</test>
<status status="PASS" starttime="20220411 14:47:53.775" endtime="20220411 14:47:55.142"/>
</suite>
<suite id="s1-s2" name="[2]GET Users" source="D:\Code\QA\robotframework\robot-test\api-test\[2]GET_Users.robot">
<test id="s1-s2-t1" name="Get Users List">
<kw name="New GET Request">
<var>${user}</var>
<arg>users</arg>
<kw name="New Session" library="Keywords">
<var>${mySession}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Authorization=Bearer ${access_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220411 14:47:55.169" level="INFO">${header} = {'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'}</msg>
<status status="PASS" starttime="20220411 14:47:55.168" endtime="20220411 14:47:55.169"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>mySession</arg>
<arg>${base_url}</arg>
<arg>headers=${header}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220411 14:47:55.170" level="INFO">Creating Session using : alias=mySession, url=https://gorest.co.in/public/v2/, headers={'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220411 14:47:55.170" endtime="20220411 14:47:55.171"/>
</kw>
<msg timestamp="20220411 14:47:55.171" level="INFO">${mySession} = mySession</msg>
<status status="PASS" starttime="20220411 14:47:55.168" endtime="20220411 14:47:55.171"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${res}</var>
<arg>${mySession}</arg>
<arg>${url}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220411 14:47:56.182" level="INFO">GET Request : url=https://gorest.co.in/public/v2/users 
 path_url=/public/v2/users 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'} 
 body=None 
 </msg>
<msg timestamp="20220411 14:47:56.183" level="INFO">GET Response : url=https://gorest.co.in/public/v2/users 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 11 Apr 2022 07:47:54 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding, Origin', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '0', 'X-Content-Type-Options': 'nosniff', 'X-Download-Options': 'noopen', 'X-Permitted-Cross-Domain-Policies': 'none', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'X-RateLimit-Limit': '90', 'X-RateLimit-Remaining': '89', 'X-RateLimit-Reset': '1', 'X-Pagination-Total': '2964', 'X-Pagination-Pages': '149', 'X-Pagination-Page': '1', 'X-Pagination-Limit': '20', 'X-Links-Previous': '', 'X-Links-Current': 'https://gorest.co.in/public/v2/users?page=1', 'X-Links-Next': 'https://gorest.co.in/public/v2/users?page=2', 'ETag': 'W/"0fa470a69c45e369a8d77f293fb13aeb"', 'Cache-Control': 'max-age=0, private, must-revalidate', 'X-Request-Id': 'bc24aaa0-3e12-47dd-9253-78b2bcd2339b', 'X-Runtime': '0.026914', 'Strict-Transport-Security': 'max-age=63072000; includeSubDomains', 'Content-Encoding': 'gzip'} 
 body=[{"id":3687,"name":"YDHyBOPR","email":"F32Z3mmC@mail.com","gender":"male","status":"active"},{"id":3545,"name":"lCMJPpzh","email":"nZlk9vwH@mail.com","gender":"male","status":"active"},{"id":3335,"name":"BATdybGx","email":"oSWX7UPH@mail.com","gender":"male","status":"active"},{"id":3012,"name":"Gorakhnath Saini","email":"gorakhnath_saini@bosco.biz","gender":"male","status":"inactive"},{"id":3009,"name":"Swara Patil CPA","email":"patil_cpa_swara@effertz.name","gender":"female","status":"active"},{"id":3008,"name":"Bhooshan Desai","email":"bhooshan_desai@luettgen.org","gender":"female","status":"inactive"},{"id":3007,"name":"Karthik Khan","email":"karthik_khan@runolfsson.io","gender":"male","status":"inactive"},{"id":3006,"name":"Rati Gill","email":"rati_gill@abbott.biz","gender":"male","status":"inactive"},{"id":3004,"name":"Anaadi Butt","email":"anaadi_butt@mclaughlin.name","gender":"female","status":"inactive"},{"id":3000,"name":"Rudra Chaturvedi","email":"chaturvedi_rudra@sporer.co","gender":"male","status":"active"},{"id":2999,"name":"Bhargava Namboothiri","email":"bhargava_namboothiri@mann-rice.name","gender":"male","status":"active"},{"id":2998,"name":"Ghanaanand Varman","email":"varman_ghanaanand@koepp-gottlieb.org","gender":"male","status":"inactive"},{"id":2997,"name":"Buddhana Khan","email":"buddhana_khan@rodriguez-weissnat.com","gender":"male","status":"inactive"},{"id":2996,"name":"Baidehi Varman DC","email":"varman_baidehi_dc@roob.com","gender":"female","status":"active"},{"id":2992,"name":"Aagney Singh","email":"aagney_singh@lockman-kertzmann.com","gender":"female","status":"inactive"},{"id":2991,"name":"Agniprava Devar","email":"devar_agniprava@lebsack.name","gender":"female","status":"inactive"},{"id":2990,"name":"Hamsini Varman LLD","email":"varman_lld_hamsini@wuckert.net","gender":"male","status":"active"},{"id":2984,"name":"Agniprava Chattopadhyay","email":"chattopadhyay_agniprava@dietrich.name","gender":"female","status":"active"},{"id":2983,"name":"Yoginder Johar III","email":"iii_johar_yoginder@reilly.io","gender":"female","status":"active"},{"id":2982,"name":"Aagney Patel DC","email":"patel_aagney_dc@price-bartoletti.info","gender":"male","status":"inactive"}] 
 </msg>
<msg timestamp="20220411 14:47:56.183" level="INFO">C:\Users\SIRCLO\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'gorest.co.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220411 14:47:56.186" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220411 14:47:55.171" endtime="20220411 14:47:56.187"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${body}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220411 14:47:56.194" level="INFO">${body} = [{'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3545, 'name': 'lCMJPpzh', 'email': 'nZlk9vwH@mail.com', 'gender': 'male', 'status': 'activ...</msg>
<status status="PASS" starttime="20220411 14:47:56.188" endtime="20220411 14:47:56.194"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${res.ok}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220411 14:47:56.194" endtime="20220411 14:47:56.199"/>
</kw>
<msg timestamp="20220411 14:47:56.200" level="INFO">${user} = [{'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3545, 'name': 'lCMJPpzh', 'email': 'nZlk9vwH@mail.com', 'gender': 'male', 'status': 'activ...</msg>
<status status="PASS" starttime="20220411 14:47:55.167" endtime="20220411 14:47:56.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${user}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220411 14:47:56.202" level="INFO">[{'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3545, 'name': 'lCMJPpzh', 'email': 'nZlk9vwH@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3335, 'name': 'BATdybGx', 'email': 'oSWX7UPH@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3012, 'name': 'Gorakhnath Saini', 'email': 'gorakhnath_saini@bosco.biz', 'gender': 'male', 'status': 'inactive'}, {'id': 3009, 'name': 'Swara Patil CPA', 'email': 'patil_cpa_swara@effertz.name', 'gender': 'female', 'status': 'active'}, {'id': 3008, 'name': 'Bhooshan Desai', 'email': 'bhooshan_desai@luettgen.org', 'gender': 'female', 'status': 'inactive'}, {'id': 3007, 'name': 'Karthik Khan', 'email': 'karthik_khan@runolfsson.io', 'gender': 'male', 'status': 'inactive'}, {'id': 3006, 'name': 'Rati Gill', 'email': 'rati_gill@abbott.biz', 'gender': 'male', 'status': 'inactive'}, {'id': 3004, 'name': 'Anaadi Butt', 'email': 'anaadi_butt@mclaughlin.name', 'gender': 'female', 'status': 'inactive'}, {'id': 3000, 'name': 'Rudra Chaturvedi', 'email': 'chaturvedi_rudra@sporer.co', 'gender': 'male', 'status': 'active'}, {'id': 2999, 'name': 'Bhargava Namboothiri', 'email': 'bhargava_namboothiri@mann-rice.name', 'gender': 'male', 'status': 'active'}, {'id': 2998, 'name': 'Ghanaanand Varman', 'email': 'varman_ghanaanand@koepp-gottlieb.org', 'gender': 'male', 'status': 'inactive'}, {'id': 2997, 'name': 'Buddhana Khan', 'email': 'buddhana_khan@rodriguez-weissnat.com', 'gender': 'male', 'status': 'inactive'}, {'id': 2996, 'name': 'Baidehi Varman DC', 'email': 'varman_baidehi_dc@roob.com', 'gender': 'female', 'status': 'active'}, {'id': 2992, 'name': 'Aagney Singh', 'email': 'aagney_singh@lockman-kertzmann.com', 'gender': 'female', 'status': 'inactive'}, {'id': 2991, 'name': 'Agniprava Devar', 'email': 'devar_agniprava@lebsack.name', 'gender': 'female', 'status': 'inactive'}, {'id': 2990, 'name': 'Hamsini Varman LLD', 'email': 'varman_lld_hamsini@wuckert.net', 'gender': 'male', 'status': 'active'}, {'id': 2984, 'name': 'Agniprava Chattopadhyay', 'email': 'chattopadhyay_agniprava@dietrich.name', 'gender': 'female', 'status': 'active'}, {'id': 2983, 'name': 'Yoginder Johar III', 'email': 'iii_johar_yoginder@reilly.io', 'gender': 'female', 'status': 'active'}, {'id': 2982, 'name': 'Aagney Patel DC', 'email': 'patel_aagney_dc@price-bartoletti.info', 'gender': 'male', 'status': 'inactive'}]</msg>
<status status="PASS" starttime="20220411 14:47:56.201" endtime="20220411 14:47:56.203"/>
</kw>
<status status="PASS" starttime="20220411 14:47:55.165" endtime="20220411 14:47:56.204"/>
</test>
<test id="s1-s2-t2" name="Get User Details">
<kw name="New GET Request">
<var>${user}</var>
<arg>users/${user_id}</arg>
<kw name="New Session" library="Keywords">
<var>${mySession}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Authorization=Bearer ${access_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220411 14:47:56.210" level="INFO">${header} = {'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'}</msg>
<status status="PASS" starttime="20220411 14:47:56.209" endtime="20220411 14:47:56.210"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>mySession</arg>
<arg>${base_url}</arg>
<arg>headers=${header}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220411 14:47:56.212" level="INFO">Creating Session using : alias=mySession, url=https://gorest.co.in/public/v2/, headers={'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220411 14:47:56.210" endtime="20220411 14:47:56.212"/>
</kw>
<msg timestamp="20220411 14:47:56.214" level="INFO">${mySession} = mySession</msg>
<status status="PASS" starttime="20220411 14:47:56.208" endtime="20220411 14:47:56.214"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${res}</var>
<arg>${mySession}</arg>
<arg>${url}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220411 14:47:57.198" level="INFO">GET Request : url=https://gorest.co.in/public/v2/users/2991 
 path_url=/public/v2/users/2991 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'} 
 body=None 
 </msg>
<msg timestamp="20220411 14:47:57.199" level="INFO">GET Response : url=https://gorest.co.in/public/v2/users/2991 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 11 Apr 2022 07:47:55 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding, Origin', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '0', 'X-Content-Type-Options': 'nosniff', 'X-Download-Options': 'noopen', 'X-Permitted-Cross-Domain-Policies': 'none', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'X-RateLimit-Limit': '90', 'X-RateLimit-Remaining': '89', 'X-RateLimit-Reset': '1', 'ETag': 'W/"7082f76105ccde029520e9fd663d545f"', 'Cache-Control': 'max-age=0, private, must-revalidate', 'X-Request-Id': '4028a19a-4d9c-44fa-996b-46d751c8164e', 'X-Runtime': '0.021121', 'Strict-Transport-Security': 'max-age=63072000; includeSubDomains', 'Content-Encoding': 'gzip'} 
 body={"id":2991,"name":"Agniprava Devar","email":"devar_agniprava@lebsack.name","gender":"female","status":"inactive"} 
 </msg>
<msg timestamp="20220411 14:47:57.200" level="INFO">C:\Users\SIRCLO\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'gorest.co.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220411 14:47:57.203" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220411 14:47:56.214" endtime="20220411 14:47:57.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${body}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220411 14:47:57.208" level="INFO">${body} = {'id': 2991, 'name': 'Agniprava Devar', 'email': 'devar_agniprava@lebsack.name', 'gender': 'female', 'status': 'inactive'}</msg>
<status status="PASS" starttime="20220411 14:47:57.204" endtime="20220411 14:47:57.208"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${res.ok}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220411 14:47:57.209" endtime="20220411 14:47:57.214"/>
</kw>
<msg timestamp="20220411 14:47:57.215" level="INFO">${user} = {'id': 2991, 'name': 'Agniprava Devar', 'email': 'devar_agniprava@lebsack.name', 'gender': 'female', 'status': 'inactive'}</msg>
<status status="PASS" starttime="20220411 14:47:56.207" endtime="20220411 14:47:57.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${user}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220411 14:47:57.217" level="INFO">{'id': 2991, 'name': 'Agniprava Devar', 'email': 'devar_agniprava@lebsack.name', 'gender': 'female', 'status': 'inactive'}</msg>
<status status="PASS" starttime="20220411 14:47:57.216" endtime="20220411 14:47:57.217"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${name}</var>
<arg>${user}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220411 14:47:57.265" level="INFO">${name} = ['Agniprava Devar']</msg>
<status status="PASS" starttime="20220411 14:47:57.219" endtime="20220411 14:47:57.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220411 14:47:57.267" level="INFO">['Agniprava Devar']</msg>
<status status="PASS" starttime="20220411 14:47:57.266" endtime="20220411 14:47:57.267"/>
</kw>
<status status="PASS" starttime="20220411 14:47:56.206" endtime="20220411 14:47:57.268"/>
</test>
<status status="PASS" starttime="20220411 14:47:55.146" endtime="20220411 14:47:57.270"/>
</suite>
<suite id="s1-s3" name="[3]PUT User" source="D:\Code\QA\robotframework\robot-test\api-test\[3]PUT_User.robot">
<test id="s1-s3-t1" name="Update User Info">
<kw name="Create User Info">
<var>${userInfo}</var>
<kw name="Generate Random String" library="String">
<var>${name}</var>
<arg>8</arg>
<arg>[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20220411 14:47:57.294" level="INFO">${name} = Fazetotp</msg>
<status status="PASS" starttime="20220411 14:47:57.293" endtime="20220411 14:47:57.294"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>inactive</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220411 14:47:57.294" level="INFO">${status} = inactive</msg>
<status status="PASS" starttime="20220411 14:47:57.294" endtime="20220411 14:47:57.294"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{user_info}</var>
<arg>name=${name}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220411 14:47:57.297" level="INFO">&amp;{user_info} = { name=Fazetotp | status=inactive }</msg>
<status status="PASS" starttime="20220411 14:47:57.294" endtime="20220411 14:47:57.297"/>
</kw>
<msg timestamp="20220411 14:47:57.298" level="INFO">${userInfo} = {'name': 'Fazetotp', 'status': 'inactive'}</msg>
<status status="PASS" starttime="20220411 14:47:57.293" endtime="20220411 14:47:57.298"/>
</kw>
<kw name="New PUT Request">
<var>${user}</var>
<arg>${user_id}</arg>
<arg>${userInfo}</arg>
<kw name="New Session" library="Keywords">
<var>${mySession}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Authorization=Bearer ${access_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220411 14:47:57.300" level="INFO">${header} = {'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'}</msg>
<status status="PASS" starttime="20220411 14:47:57.300" endtime="20220411 14:47:57.300"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>mySession</arg>
<arg>${base_url}</arg>
<arg>headers=${header}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220411 14:47:57.301" level="INFO">Creating Session using : alias=mySession, url=https://gorest.co.in/public/v2/, headers={'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220411 14:47:57.300" endtime="20220411 14:47:57.301"/>
</kw>
<msg timestamp="20220411 14:47:57.301" level="INFO">${mySession} = mySession</msg>
<status status="PASS" starttime="20220411 14:47:57.299" endtime="20220411 14:47:57.301"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${res}</var>
<arg>${mySession}</arg>
<arg>users/${id}</arg>
<arg>data=${user_info}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20220411 14:47:58.317" level="INFO">PUT Request : url=https://gorest.co.in/public/v2/users/2991 
 path_url=/public/v2/users/2991 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8', 'Content-Length': '29', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=name=Fazetotp&amp;status=inactive 
 </msg>
<msg timestamp="20220411 14:47:58.318" level="INFO">PUT Response : url=https://gorest.co.in/public/v2/users/2991 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 11 Apr 2022 07:47:57 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding, Origin', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '0', 'X-Content-Type-Options': 'nosniff', 'X-Download-Options': 'noopen', 'X-Permitted-Cross-Domain-Policies': 'none', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'X-RateLimit-Limit': '90', 'X-RateLimit-Remaining': '89', 'X-RateLimit-Reset': '1', 'ETag': 'W/"abd742d698891986f056d7f6bddbbde8"', 'Cache-Control': 'max-age=0, private, must-revalidate', 'X-Request-Id': '646d63ca-a256-4310-b8e0-5c108a5dc908', 'X-Runtime': '0.021305', 'Strict-Transport-Security': 'max-age=63072000; includeSubDomains', 'Content-Encoding': 'gzip'} 
 body={"name":"Fazetotp","status":"inactive","id":2991,"email":"devar_agniprava@lebsack.name","gender":"female"} 
 </msg>
<msg timestamp="20220411 14:47:58.318" level="INFO">C:\Users\SIRCLO\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'gorest.co.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220411 14:47:58.321" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220411 14:47:57.302" endtime="20220411 14:47:58.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${$body}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220411 14:47:58.326" level="INFO">${$body} = {'name': 'Fazetotp', 'status': 'inactive', 'id': 2991, 'email': 'devar_agniprava@lebsack.name', 'gender': 'female'}</msg>
<status status="PASS" starttime="20220411 14:47:58.323" endtime="20220411 14:47:58.326"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${res.ok}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220411 14:47:58.326" endtime="20220411 14:47:58.330"/>
</kw>
<msg timestamp="20220411 14:47:58.331" level="INFO">${user} = {'name': 'Fazetotp', 'status': 'inactive', 'id': 2991, 'email': 'devar_agniprava@lebsack.name', 'gender': 'female'}</msg>
<status status="PASS" starttime="20220411 14:47:57.299" endtime="20220411 14:47:58.331"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${name}</var>
<arg>${user}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220411 14:47:58.375" level="INFO">${name} = ['Fazetotp']</msg>
<status status="PASS" starttime="20220411 14:47:58.332" endtime="20220411 14:47:58.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${name[0]}</arg>
<arg>${userInfo.name}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220411 14:47:58.376" endtime="20220411 14:47:58.377"/>
</kw>
<status status="PASS" starttime="20220411 14:47:57.292" endtime="20220411 14:47:58.379"/>
</test>
<status status="PASS" starttime="20220411 14:47:57.273" endtime="20220411 14:47:58.383"/>
</suite>
<suite id="s1-s4" name="[4]DELETE User" source="D:\Code\QA\robotframework\robot-test\api-test\[4]DELETE_User.robot">
<test id="s1-s4-t1" name="Delete User">
<kw name="Get First User Id">
<var>${user_id}</var>
<kw name="New Session" library="Keywords">
<var>${mySession}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Authorization=Bearer ${access_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220411 14:47:58.410" level="INFO">${header} = {'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'}</msg>
<status status="PASS" starttime="20220411 14:47:58.410" endtime="20220411 14:47:58.410"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>mySession</arg>
<arg>${base_url}</arg>
<arg>headers=${header}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220411 14:47:58.411" level="INFO">Creating Session using : alias=mySession, url=https://gorest.co.in/public/v2/, headers={'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220411 14:47:58.411" endtime="20220411 14:47:58.412"/>
</kw>
<msg timestamp="20220411 14:47:58.414" level="INFO">${mySession} = mySession</msg>
<status status="PASS" starttime="20220411 14:47:58.409" endtime="20220411 14:47:58.414"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${res}</var>
<arg>${mySession}</arg>
<arg>users</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220411 14:47:59.421" level="INFO">GET Request : url=https://gorest.co.in/public/v2/users 
 path_url=/public/v2/users 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'} 
 body=None 
 </msg>
<msg timestamp="20220411 14:47:59.421" level="INFO">GET Response : url=https://gorest.co.in/public/v2/users 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 11 Apr 2022 07:47:58 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding, Origin', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '0', 'X-Content-Type-Options': 'nosniff', 'X-Download-Options': 'noopen', 'X-Permitted-Cross-Domain-Policies': 'none', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'X-RateLimit-Limit': '90', 'X-RateLimit-Remaining': '89', 'X-RateLimit-Reset': '1', 'X-Pagination-Total': '2964', 'X-Pagination-Pages': '149', 'X-Pagination-Page': '1', 'X-Pagination-Limit': '20', 'X-Links-Previous': '', 'X-Links-Current': 'https://gorest.co.in/public/v2/users?page=1', 'X-Links-Next': 'https://gorest.co.in/public/v2/users?page=2', 'ETag': 'W/"f6bbf3444dfcff82d8cff76e7ea69354"', 'Cache-Control': 'max-age=0, private, must-revalidate', 'X-Request-Id': '2577f3da-8417-4da2-869a-ba4004c6d926', 'X-Runtime': '0.025880', 'Strict-Transport-Security': 'max-age=63072000; includeSubDomains', 'Content-Encoding': 'gzip'} 
 body=[{"id":2991,"name":"Fazetotp","email":"devar_agniprava@lebsack.name","gender":"female","status":"inactive"},{"id":3687,"name":"YDHyBOPR","email":"F32Z3mmC@mail.com","gender":"male","status":"active"},{"id":3545,"name":"lCMJPpzh","email":"nZlk9vwH@mail.com","gender":"male","status":"active"},{"id":3335,"name":"BATdybGx","email":"oSWX7UPH@mail.com","gender":"male","status":"active"},{"id":3012,"name":"Gorakhnath Saini","email":"gorakhnath_saini@bosco.biz","gender":"male","status":"inactive"},{"id":3009,"name":"Swara Patil CPA","email":"patil_cpa_swara@effertz.name","gender":"female","status":"active"},{"id":3008,"name":"Bhooshan Desai","email":"bhooshan_desai@luettgen.org","gender":"female","status":"inactive"},{"id":3007,"name":"Karthik Khan","email":"karthik_khan@runolfsson.io","gender":"male","status":"inactive"},{"id":3006,"name":"Rati Gill","email":"rati_gill@abbott.biz","gender":"male","status":"inactive"},{"id":3004,"name":"Anaadi Butt","email":"anaadi_butt@mclaughlin.name","gender":"female","status":"inactive"},{"id":3000,"name":"Rudra Chaturvedi","email":"chaturvedi_rudra@sporer.co","gender":"male","status":"active"},{"id":2999,"name":"Bhargava Namboothiri","email":"bhargava_namboothiri@mann-rice.name","gender":"male","status":"active"},{"id":2998,"name":"Ghanaanand Varman","email":"varman_ghanaanand@koepp-gottlieb.org","gender":"male","status":"inactive"},{"id":2997,"name":"Buddhana Khan","email":"buddhana_khan@rodriguez-weissnat.com","gender":"male","status":"inactive"},{"id":2996,"name":"Baidehi Varman DC","email":"varman_baidehi_dc@roob.com","gender":"female","status":"active"},{"id":2992,"name":"Aagney Singh","email":"aagney_singh@lockman-kertzmann.com","gender":"female","status":"inactive"},{"id":2990,"name":"Hamsini Varman LLD","email":"varman_lld_hamsini@wuckert.net","gender":"male","status":"active"},{"id":2984,"name":"Agniprava Chattopadhyay","email":"chattopadhyay_agniprava@dietrich.name","gender":"female","status":"active"},{"id":2983,"name":"Yoginder Johar III","email":"iii_johar_yoginder@reilly.io","gender":"female","status":"active"},{"id":2982,"name":"Aagney Patel DC","email":"patel_aagney_dc@price-bartoletti.info","gender":"male","status":"inactive"}] 
 </msg>
<msg timestamp="20220411 14:47:59.421" level="INFO">C:\Users\SIRCLO\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'gorest.co.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220411 14:47:59.423" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220411 14:47:58.415" endtime="20220411 14:47:59.423"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${body}</var>
<arg>${res.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220411 14:47:59.424" level="INFO">${body} = [{'id': 2991, 'name': 'Fazetotp', 'email': 'devar_agniprava@lebsack.name', 'gender': 'female', 'status': 'inactive'}, {'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', '...</msg>
<status status="PASS" starttime="20220411 14:47:59.423" endtime="20220411 14:47:59.424"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${id}</var>
<arg>${body}</arg>
<arg>$[0].id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220411 14:47:59.458" level="INFO">${id} = [2991]</msg>
<status status="PASS" starttime="20220411 14:47:59.424" endtime="20220411 14:47:59.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${res.ok}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220411 14:47:59.458" endtime="20220411 14:47:59.460"/>
</kw>
<msg timestamp="20220411 14:47:59.461" level="INFO">${user_id} = 2991</msg>
<status status="PASS" starttime="20220411 14:47:58.409" endtime="20220411 14:47:59.461"/>
</kw>
<kw name="New DELETE Request">
<arg>${user_id}</arg>
<kw name="New Session" library="Keywords">
<var>${mySession}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Authorization=Bearer ${access_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220411 14:47:59.466" level="INFO">${header} = {'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'}</msg>
<status status="PASS" starttime="20220411 14:47:59.465" endtime="20220411 14:47:59.466"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>mySession</arg>
<arg>${base_url}</arg>
<arg>headers=${header}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220411 14:47:59.466" level="INFO">Creating Session using : alias=mySession, url=https://gorest.co.in/public/v2/, headers={'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220411 14:47:59.466" endtime="20220411 14:47:59.467"/>
</kw>
<msg timestamp="20220411 14:47:59.467" level="INFO">${mySession} = mySession</msg>
<status status="PASS" starttime="20220411 14:47:59.463" endtime="20220411 14:47:59.467"/>
</kw>
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${res}</var>
<arg>${mySession}</arg>
<arg>users/${id}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20220411 14:48:00.439" level="INFO">DELETE Request : url=https://gorest.co.in/public/v2/users/2991 
 path_url=/public/v2/users/2991 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220411 14:48:00.440" level="INFO">DELETE Response : url=https://gorest.co.in/public/v2/users/2991 
 status=204, reason=No Content 
 headers={'Server': 'nginx', 'Date': 'Mon, 11 Apr 2022 07:47:59 GMT', 'Connection': 'keep-alive', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '0', 'X-Content-Type-Options': 'nosniff', 'X-Download-Options': 'noopen', 'X-Permitted-Cross-Domain-Policies': 'none', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'X-RateLimit-Limit': '90', 'X-RateLimit-Remaining': '89', 'X-RateLimit-Reset': '1', 'Cache-Control': 'no-cache', 'X-Request-Id': 'f2f76f31-e2b2-4c81-bbe5-1e7955969fb2', 'X-Runtime': '0.032281', 'Strict-Transport-Security': 'max-age=63072000; includeSubDomains', 'Vary': 'Origin'} 
 body=None 
 </msg>
<msg timestamp="20220411 14:48:00.440" level="INFO">C:\Users\SIRCLO\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'gorest.co.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220411 14:48:00.441" level="INFO">${res} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20220411 14:47:59.467" endtime="20220411 14:48:00.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${res}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220411 14:48:00.442" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20220411 14:48:00.441" endtime="20220411 14:48:00.442"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${res.ok}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220411 14:48:00.442" endtime="20220411 14:48:00.444"/>
</kw>
<status status="PASS" starttime="20220411 14:47:59.462" endtime="20220411 14:48:00.444"/>
</kw>
<status status="PASS" starttime="20220411 14:47:58.408" endtime="20220411 14:48:00.445"/>
</test>
<status status="PASS" starttime="20220411 14:47:58.386" endtime="20220411 14:48:00.447"/>
</suite>
<suite id="s1-s5" name="[5]StoringData" source="D:\Code\QA\robotframework\robot-test\api-test\[5]StoringData.robot">
<test id="s1-s5-t1" name="Get User List then Store Data">
<kw name="New GET Request">
<var>${body}</var>
<arg>users</arg>
<kw name="New Session" library="Keywords">
<var>${mySession}</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Authorization=Bearer ${access_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220411 14:48:00.488" level="INFO">${header} = {'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'}</msg>
<status status="PASS" starttime="20220411 14:48:00.488" endtime="20220411 14:48:00.488"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>mySession</arg>
<arg>${base_url}</arg>
<arg>headers=${header}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220411 14:48:00.489" level="INFO">Creating Session using : alias=mySession, url=https://gorest.co.in/public/v2/, headers={'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220411 14:48:00.488" endtime="20220411 14:48:00.489"/>
</kw>
<msg timestamp="20220411 14:48:00.489" level="INFO">${mySession} = mySession</msg>
<status status="PASS" starttime="20220411 14:48:00.487" endtime="20220411 14:48:00.489"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${res}</var>
<arg>${mySession}</arg>
<arg>${url}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220411 14:48:01.457" level="INFO">GET Request : url=https://gorest.co.in/public/v2/users 
 path_url=/public/v2/users 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 9504a6142adddde79048ad837a8119c9546e83bcf1a91cb58ad5f484ce30e3c8'} 
 body=None 
 </msg>
<msg timestamp="20220411 14:48:01.458" level="INFO">GET Response : url=https://gorest.co.in/public/v2/users 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Mon, 11 Apr 2022 07:48:00 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding, Origin', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '0', 'X-Content-Type-Options': 'nosniff', 'X-Download-Options': 'noopen', 'X-Permitted-Cross-Domain-Policies': 'none', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'X-RateLimit-Limit': '90', 'X-RateLimit-Remaining': '89', 'X-RateLimit-Reset': '1', 'X-Pagination-Total': '2963', 'X-Pagination-Pages': '149', 'X-Pagination-Page': '1', 'X-Pagination-Limit': '20', 'X-Links-Previous': '', 'X-Links-Current': 'https://gorest.co.in/public/v2/users?page=1', 'X-Links-Next': 'https://gorest.co.in/public/v2/users?page=2', 'ETag': 'W/"d5c10c52210e77aecae82287f42e4451"', 'Cache-Control': 'max-age=0, private, must-revalidate', 'X-Request-Id': 'a842ff98-a296-4b74-a711-73a748f2b3c7', 'X-Runtime': '0.022926', 'Strict-Transport-Security': 'max-age=63072000; includeSubDomains', 'Content-Encoding': 'gzip'} 
 body=[{"id":3687,"name":"YDHyBOPR","email":"F32Z3mmC@mail.com","gender":"male","status":"active"},{"id":3545,"name":"lCMJPpzh","email":"nZlk9vwH@mail.com","gender":"male","status":"active"},{"id":3335,"name":"BATdybGx","email":"oSWX7UPH@mail.com","gender":"male","status":"active"},{"id":3012,"name":"Gorakhnath Saini","email":"gorakhnath_saini@bosco.biz","gender":"male","status":"inactive"},{"id":3009,"name":"Swara Patil CPA","email":"patil_cpa_swara@effertz.name","gender":"female","status":"active"},{"id":3008,"name":"Bhooshan Desai","email":"bhooshan_desai@luettgen.org","gender":"female","status":"inactive"},{"id":3007,"name":"Karthik Khan","email":"karthik_khan@runolfsson.io","gender":"male","status":"inactive"},{"id":3006,"name":"Rati Gill","email":"rati_gill@abbott.biz","gender":"male","status":"inactive"},{"id":3004,"name":"Anaadi Butt","email":"anaadi_butt@mclaughlin.name","gender":"female","status":"inactive"},{"id":3000,"name":"Rudra Chaturvedi","email":"chaturvedi_rudra@sporer.co","gender":"male","status":"active"},{"id":2999,"name":"Bhargava Namboothiri","email":"bhargava_namboothiri@mann-rice.name","gender":"male","status":"active"},{"id":2998,"name":"Ghanaanand Varman","email":"varman_ghanaanand@koepp-gottlieb.org","gender":"male","status":"inactive"},{"id":2997,"name":"Buddhana Khan","email":"buddhana_khan@rodriguez-weissnat.com","gender":"male","status":"inactive"},{"id":2996,"name":"Baidehi Varman DC","email":"varman_baidehi_dc@roob.com","gender":"female","status":"active"},{"id":2992,"name":"Aagney Singh","email":"aagney_singh@lockman-kertzmann.com","gender":"female","status":"inactive"},{"id":2990,"name":"Hamsini Varman LLD","email":"varman_lld_hamsini@wuckert.net","gender":"male","status":"active"},{"id":2984,"name":"Agniprava Chattopadhyay","email":"chattopadhyay_agniprava@dietrich.name","gender":"female","status":"active"},{"id":2983,"name":"Yoginder Johar III","email":"iii_johar_yoginder@reilly.io","gender":"female","status":"active"},{"id":2982,"name":"Aagney Patel DC","email":"patel_aagney_dc@price-bartoletti.info","gender":"male","status":"inactive"},{"id":2981,"name":"Rep. Dipali Namboothiri","email":"dipali_namboothiri_rep@crooks.co","gender":"female","status":"inactive"}] 
 </msg>
<msg timestamp="20220411 14:48:01.458" level="INFO">C:\Users\SIRCLO\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'gorest.co.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220411 14:48:01.459" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220411 14:48:00.489" endtime="20220411 14:48:01.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${body}</var>
<arg>${res.content}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220411 14:48:01.461" level="INFO">${body} = [{"id":3687,"name":"YDHyBOPR","email":"F32Z3mmC@mail.com","gender":"male","status":"active"},{"id":3545,"name":"lCMJPpzh","email":"nZlk9vwH@mail.com","gender":"male","status":"active"},{"id":3335,"nam...</msg>
<status status="PASS" starttime="20220411 14:48:01.460" endtime="20220411 14:48:01.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${res.ok}</arg>
<arg>${True}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220411 14:48:01.462" endtime="20220411 14:48:01.464"/>
</kw>
<msg timestamp="20220411 14:48:01.464" level="INFO">${body} = [{"id":3687,"name":"YDHyBOPR","email":"F32Z3mmC@mail.com","gender":"male","status":"active"},{"id":3545,"name":"lCMJPpzh","email":"nZlk9vwH@mail.com","gender":"male","status":"active"},{"id":3335,"nam...</msg>
<status status="PASS" starttime="20220411 14:48:00.487" endtime="20220411 14:48:01.464"/>
</kw>
<kw name="Export Body to JSON File" library="Keywords">
<arg>Users</arg>
<arg>${body}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${body}</var>
<arg>${body}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20220411 14:48:01.467" level="INFO">${body} = [{"id":3687,"name":"YDHyBOPR","email":"F32Z3mmC@mail.com","gender":"male","status":"active"},{"id":3545,"name":"lCMJPpzh","email":"nZlk9vwH@mail.com","gender":"male","status":"active"},{"id":3335,"nam...</msg>
<status status="PASS" starttime="20220411 14:48:01.466" endtime="20220411 14:48:01.467"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>./api-test/result/${file_name}.json</arg>
<arg>${body}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20220411 14:48:01.468" level="INFO" html="true">Created file '&lt;a href="file://D:\Code\QA\robotframework\robot-test\api-test\result\Users.json"&gt;D:\Code\QA\robotframework\robot-test\api-test\result\Users.json&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220411 14:48:01.467" endtime="20220411 14:48:01.468"/>
</kw>
<status status="PASS" starttime="20220411 14:48:01.465" endtime="20220411 14:48:01.469"/>
</kw>
<kw name="Import JSON File" library="Keywords">
<var>${json}</var>
<arg>Users</arg>
<kw name="Load JSON From File" library="JSONLibrary">
<var>${json}</var>
<arg>./api-test/result/${file_name}.json</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20220411 14:48:01.477" level="INFO">${json} = [{'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3545, 'name': 'lCMJPpzh', 'email': 'nZlk9vwH@mail.com', 'gender': 'male', 'status': 'activ...</msg>
<status status="PASS" starttime="20220411 14:48:01.470" endtime="20220411 14:48:01.477"/>
</kw>
<msg timestamp="20220411 14:48:01.477" level="INFO">${json} = [{'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3545, 'name': 'lCMJPpzh', 'email': 'nZlk9vwH@mail.com', 'gender': 'male', 'status': 'activ...</msg>
<status status="PASS" starttime="20220411 14:48:01.469" endtime="20220411 14:48:01.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220411 14:48:01.478" level="INFO">[{'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3545, 'name': 'lCMJPpzh', 'email': 'nZlk9vwH@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3335, 'name': 'BATdybGx', 'email': 'oSWX7UPH@mail.com', 'gender': 'male', 'status': 'active'}, {'id': 3012, 'name': 'Gorakhnath Saini', 'email': 'gorakhnath_saini@bosco.biz', 'gender': 'male', 'status': 'inactive'}, {'id': 3009, 'name': 'Swara Patil CPA', 'email': 'patil_cpa_swara@effertz.name', 'gender': 'female', 'status': 'active'}, {'id': 3008, 'name': 'Bhooshan Desai', 'email': 'bhooshan_desai@luettgen.org', 'gender': 'female', 'status': 'inactive'}, {'id': 3007, 'name': 'Karthik Khan', 'email': 'karthik_khan@runolfsson.io', 'gender': 'male', 'status': 'inactive'}, {'id': 3006, 'name': 'Rati Gill', 'email': 'rati_gill@abbott.biz', 'gender': 'male', 'status': 'inactive'}, {'id': 3004, 'name': 'Anaadi Butt', 'email': 'anaadi_butt@mclaughlin.name', 'gender': 'female', 'status': 'inactive'}, {'id': 3000, 'name': 'Rudra Chaturvedi', 'email': 'chaturvedi_rudra@sporer.co', 'gender': 'male', 'status': 'active'}, {'id': 2999, 'name': 'Bhargava Namboothiri', 'email': 'bhargava_namboothiri@mann-rice.name', 'gender': 'male', 'status': 'active'}, {'id': 2998, 'name': 'Ghanaanand Varman', 'email': 'varman_ghanaanand@koepp-gottlieb.org', 'gender': 'male', 'status': 'inactive'}, {'id': 2997, 'name': 'Buddhana Khan', 'email': 'buddhana_khan@rodriguez-weissnat.com', 'gender': 'male', 'status': 'inactive'}, {'id': 2996, 'name': 'Baidehi Varman DC', 'email': 'varman_baidehi_dc@roob.com', 'gender': 'female', 'status': 'active'}, {'id': 2992, 'name': 'Aagney Singh', 'email': 'aagney_singh@lockman-kertzmann.com', 'gender': 'female', 'status': 'inactive'}, {'id': 2990, 'name': 'Hamsini Varman LLD', 'email': 'varman_lld_hamsini@wuckert.net', 'gender': 'male', 'status': 'active'}, {'id': 2984, 'name': 'Agniprava Chattopadhyay', 'email': 'chattopadhyay_agniprava@dietrich.name', 'gender': 'female', 'status': 'active'}, {'id': 2983, 'name': 'Yoginder Johar III', 'email': 'iii_johar_yoginder@reilly.io', 'gender': 'female', 'status': 'active'}, {'id': 2982, 'name': 'Aagney Patel DC', 'email': 'patel_aagney_dc@price-bartoletti.info', 'gender': 'male', 'status': 'inactive'}, {'id': 2981, 'name': 'Rep. Dipali Namboothiri', 'email': 'dipali_namboothiri_rep@crooks.co', 'gender': 'female', 'status': 'inactive'}]</msg>
<status status="PASS" starttime="20220411 14:48:01.478" endtime="20220411 14:48:01.478"/>
</kw>
<kw name="Get First User">
<arg>${json}</arg>
<kw name="Log" library="BuiltIn">
<arg>${body[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220411 14:48:01.480" level="INFO">{'id': 3687, 'name': 'YDHyBOPR', 'email': 'F32Z3mmC@mail.com', 'gender': 'male', 'status': 'active'}</msg>
<status status="PASS" starttime="20220411 14:48:01.479" endtime="20220411 14:48:01.480"/>
</kw>
<status status="PASS" starttime="20220411 14:48:01.479" endtime="20220411 14:48:01.480"/>
</kw>
<kw name="Get First User's Name">
<arg>${json}</arg>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${name}</var>
<arg>${body[0]}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220411 14:48:01.510" level="INFO">${name} = ['YDHyBOPR']</msg>
<status status="PASS" starttime="20220411 14:48:01.481" endtime="20220411 14:48:01.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${name[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220411 14:48:01.514" level="INFO">YDHyBOPR</msg>
<status status="PASS" starttime="20220411 14:48:01.510" endtime="20220411 14:48:01.514"/>
</kw>
<status status="PASS" starttime="20220411 14:48:01.481" endtime="20220411 14:48:01.514"/>
</kw>
<status status="PASS" starttime="20220411 14:48:00.486" endtime="20220411 14:48:01.515"/>
</test>
<status status="PASS" starttime="20220411 14:48:00.451" endtime="20220411 14:48:01.518"/>
</suite>
<status status="PASS" starttime="20220411 14:47:53.743" endtime="20220411 14:48:01.521"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" skip="0" id="s1" name="Api-Test">Api-Test</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="[1]POST User">Api-Test.[1]POST User</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="[2]GET Users">Api-Test.[2]GET Users</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="[3]PUT User">Api-Test.[3]PUT User</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="[4]DELETE User">Api-Test.[4]DELETE User</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="[5]StoringData">Api-Test.[5]StoringData</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
